#!/usr/bin/env ruby
require 'gli'
require 'jiffy'

include GLI::App

program_desc 'A command-line app to do automated virtual machine deployment'

version Jiffy::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Create a virtual resources from file'
arg_name 'name of .rc file specifying resources'
command :create do |c|
    c.action do |global_options, options, args|
        raise "File #{args[0]} does not exist." unless File.exist?(args[0])

        create = Commands::Create.new(args[0])
        create.create
    end
end

desc 'View what changes will be made on create'
arg_name 'name of .rc file specifying virtual resources'
command :plan do |c|
    c.action do |global_options, options, args|
        raise "File #{args[0]} does not exist." unless File.exist?(args[0])

        plan = Commands::Plan.new(args[0])
        plan.plan
    end
end

desc 'Destroy all specified resources'
arg_name 'name of .rc file specifying virtual resources'
command :destroy do |c|
    c.action do |global_options, options, args|
        raise "File #{args[0]} does not exist." unless File.exist?(args[0])

        destroy = Commands::Destroy.new(args[0])
        destroy.destroy
    end
end

pre do |global, command, options, args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
end

post do |global, command, options, args|
    # what to do after arg parsing
end

on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
end

exit run(ARGV)
